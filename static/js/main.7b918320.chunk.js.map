{"version":3,"sources":["atoms/Buttons.js","molecules/Cards.js","organism/Forms.js","organism/Container.js","App.js","showArray.js","index.js"],"names":["Button","undefined","this","props","children","btnType","defaultType","react_default","a","createElement","className","concat","onClick","Component","Card","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","renderHeading","i","handleBtn","state","arrayInstance","length","setState","arrayData","isclicked","isRendering","console","dir","showMapReact","renderArray","keyVal","processArray","strArr","toString","resetInstanceArray","initialState","prevProps","prevState","result","primBtn","_this2","Fragment","Buttons","cardType","key","Form","handleChange","event","value","target","parsedVal","parseInt","isNaN","number","submitForm","handleSubmit","id","type","name","onChange","form","resetArrays","Container","renderFromState","targetArr","renderState","map","push","renderCard","numArr","filter","forEach","intialState","index","renderList","App","entry","array","toConsumableArray","toRender","objectSpread","handleCardAdd","handleCardId","assertThisInitialized","Cards","resetState","resetNow","onResetClick","resetArray","arrMethods","some","sort","find","Forms","organism_Container","arr","callback","T","A","k","log","TypeError","O","len","arguments","Array","kValue","mappedValue","showForEach","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7b918320.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Button extends Component {\r\n\r\n  render() {\r\n    if (this.props.children === undefined) return null;\r\n    // Accounting for, if the user doesn't specify a button type\r\n    let defaultType;\r\n    if (this.props.btnType === undefined) {\r\n      defaultType = 'btn--std'\r\n    }\r\n    return (\r\n      <button\r\n        className={`btn ${this.props.btnType} ${defaultType}`}\r\n        onClick={this.props.onClick}\r\n      >\r\n      {this.props.children}\r\n      </button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Button;","import React, { Component } from 'react';\r\nimport Button from '../atoms/Buttons';\r\nclass Card extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.initialState = {\r\n      arrayInstance: [],\r\n      isclicked: false,\r\n      isRendering: false,\r\n    }\r\n    this.state = this.initialState;\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // reset if button is clicked\r\n    if (this.state.isclicked !== false) {\r\n      this.setState({isclicked: false});\r\n      return;\r\n    }\r\n  }\r\n  // TODO: move this to App.js or make it its own function to import\r\n  renderHeading = i => {\r\n    switch (i) {\r\n      case 0:\r\n        return (\r\n          'Initial State'\r\n        );\r\n      case 1:\r\n        return (\r\n          'Array.map( )'\r\n        );\r\n      case 2:\r\n        return (\r\n          'Array.filter( )'\r\n        );\r\n      case 3:\r\n        return (\r\n          'Array.forEach( )'\r\n        );\r\n      case 4:\r\n        return (\r\n          'Array.some( )'\r\n        );\r\n      default:\r\n      break;\r\n    }\r\n  }\r\n\r\n  handleBtn = () => {\r\n    if (this.state.arrayInstance.length === 0) {\r\n      this.setState({\r\n        arrayInstance: this.props.arrayData,\r\n        isclicked: !this.state.isclicked,\r\n        isRendering: !this.state.isRendering,\r\n      });\r\n      console.dir(this.props.showMapReact);\r\n    }\r\n\r\n  }\r\n\r\n  renderArray = () => {\r\n    if ((this.props.arrayData.length < 1) && (this.props.keyVal === 0)){\r\n      return `Please submit values`;\r\n    }\r\n    if ((this.props.keyVal === 0) || (this.props.arrayData.length > 0)) {\r\n      return `[ ${this.props.arrayData} ]`;\r\n    }\r\n  }\r\n\r\n  processArray = () => {\r\n    if (this.props.keyVal === 0) return;\r\n    let strArr = `[ ${this.state.arrayInstance.toString()} ]`\r\n    return (\r\n      <p\r\n      className=\"card__text\"\r\n      >\r\n        {strArr}\r\n      </p>\r\n    )\r\n  }\r\n\r\n  resetInstanceArray = () => {\r\n    this.setState({arrayInstance: []});\r\n  }\r\n\r\n  render() {\r\n    const props = this.props;\r\n    const keyVal = props.keyVal;\r\n    let result;\r\n    let primBtn;\r\n\r\n    if ((this.state.isclicked === true) || (this.state.isRendering === true)) {\r\n      result = this.processArray(keyVal);\r\n    }\r\n    if (keyVal !== 0) {\r\n      primBtn =\r\n        <>\r\n          <Button\r\n            onClick={() => this.handleBtn()}\r\n          >\r\n            Begin Computation\r\n          </Button>\r\n\r\n          <Button\r\n            btnType=\"btn--reset\"\r\n            onClick={() => this.resetInstanceArray()}\r\n          >\r\n            Reset\r\n          </Button>\r\n        </>\r\n    }\r\n    return (\r\n      <div className={`card ${props.cardType}`}\r\n        key={keyVal}\r\n      >\r\n        <h2 className=\"card__heading\">{this.renderHeading(keyVal)}</h2>\r\n        <div className=\"card__content\">\r\n          <p className=\"card__text\">\r\n            {this.renderArray()}\r\n          </p>\r\n          {result}\r\n          <div className=\"ctr--btn\">\r\n            {primBtn}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react';\r\n\r\nclass Form extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.initialState = {\r\n      number: '',\r\n    }\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  handleChange = event => {\r\n    const {value} = event.target;\r\n    const parsedVal = parseInt(value, 10);\r\n    if (isNaN(parsedVal) || (value === '') || (value.length > 4)) return;\r\n\r\n    this.setState({\r\n      number: parsedVal\r\n    });\r\n  }\r\n\r\n  submitForm = () => {\r\n    this.props.handleSubmit(this.state.number);\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n\r\n  render() {\r\n    const { number } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"ctr--form\">\r\n          <form id=\"form\" className=\"form\">\r\n            <h2 className=\"heading\">Initialize Array</h2>\r\n            <input\r\n              type=\"text\"\r\n              name=\"entry\"\r\n              value={number}\r\n              onChange={this.handleChange}\r\n            />\r\n            <input className=\"btn btn--std\"\r\n              form=\"form\"\r\n              type=\"button\"\r\n              value=\"Submit\"\r\n              onClick={this.submitForm}\r\n            />\r\n            <button className=\"btn btn--reset\"\r\n              type=\"button\"\r\n              onClick={this.props.resetArrays}\r\n            >\r\n              Reset\r\n            </button>\r\n          </form>\r\n          {this.props.children}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;","import React, { Component } from 'react';\r\n\r\nclass Container extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.intialState = {\r\n      index: 0,\r\n    }\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  renderFromState = (targetArr) => {\r\n    const props = this.props;\r\n    const renderState = props.renderState;\r\n    if (renderState.map === true) {\r\n      targetArr.push(props.renderCard(props.numArr[0]));\r\n    }\r\n    if (renderState.filter === true) {\r\n      targetArr.push(props.renderCard(props.numArr[1]));\r\n    }\r\n    if (renderState.forEach === true) {\r\n      targetArr.push(props.renderCard(props.numArr[2]));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const props = this.props;\r\n    let renderList = [];\r\n    // Default card, always needs to be there\r\n    if (props.className === \"ctr--cards\") {\r\n      renderList.push(props.renderCard(0));\r\n    }\r\n\r\n    this.renderFromState(renderList);\r\n\r\n    return (\r\n      <div\r\n      className=\"ctr--cards\"\r\n      >\r\n        {renderList}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Container;\r\n","import React, { Component } from 'react';\r\nimport Button from './atoms/Buttons';\r\nimport Card from './molecules/Cards';\r\nimport Form from './organism/Forms';\r\nimport Container from './organism/Container';\r\nimport './index.css';\r\n\r\n// FIXME: consolidate indexing standard, right now its both 0,1,2,3 and 1,2,3,4\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.initialState = {\r\n      toRender: {\r\n        map: false,\r\n        filter: false,\r\n        forEach: false,\r\n        some: false,\r\n        sort: false,\r\n        find: false,\r\n      },\r\n      array: [],\r\n      resetNow: false,\r\n    };\r\n    this.state = this.initialState;\r\n  }\r\n  numArr = [1,2,3,4,5,6,7,8];\r\n\r\n  // Event handling methods\r\n\r\n  handleSubmit = (entry) => {\r\n    if (entry === '') return;\r\n    this.setState({array: [...this.state.array, entry]});\r\n  }\r\n\r\n  resetArrays = () => {\r\n    this.setState({\r\n      array: [],\r\n      toRender: {...this.initialState.toRender}\r\n    });\r\n  }\r\n\r\n  // State management\r\n\r\n  handleCardAdd = (keyVal) => {\r\n    switch(keyVal) {\r\n      case 1:\r\n        this.setState({\r\n          toRender: {\r\n            ...this.state.toRender,\r\n            map: !this.state.toRender.map,\r\n          },\r\n        });\r\n        break;\r\n      case 2:\r\n        this.setState({\r\n          toRender: {\r\n            ...this.state.toRender,\r\n            filter: !this.state.toRender.filter,\r\n          },\r\n        });\r\n        break;\r\n      case 3:\r\n        this.setState({\r\n          toRender: {\r\n            ...this.state.toRender,\r\n            forEach: !this.state.toRender.forEach,\r\n          },\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // Rendering methods\r\n\r\n  handleCardId = (numArr) => {\r\n    switch(numArr) {\r\n      case 0:\r\n        return 'card--init';\r\n      case 1:\r\n        return 'card--map';\r\n      case 2:\r\n        return 'card--filter';\r\n      case 3:\r\n        return 'card--forEach';\r\n      case 4:\r\n        return 'card--some';\r\n      case 5:\r\n        return 'card--find';\r\n      case 6:\r\n        return 'card--findIndex';\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  renderCard = (i) => {\r\n    console.dir(this);\r\n    const state = this.state;\r\n    return (\r\n      <Card\r\n        key={i}\r\n        keyVal={i}\r\n        cardType={this.handleCardId(i)}\r\n        arrayData={state.array}\r\n        resetState={state.resetNow}\r\n        onResetClick={() => this.resetArray()}\r\n        showMapReact={this.props.arrMethods.showMapReact}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    // TODO: eventually make a method for populating ctr--btn by extending Container.js\r\n    // TODO: reduce the buttons in the div.ctr--btn with Array.prototype.map()\r\n    return (\r\n      <main>\r\n        <Form\r\n          handleSubmit={this.handleSubmit}\r\n          resetArrays={this.resetArrays}\r\n        >\r\n          <div className=\"ctr--btn\">\r\n              <Button\r\n              key={1}\r\n              onClick={() => this.handleCardAdd(1)}\r\n              >\r\n                Array.map( )\r\n              </Button>\r\n\r\n              <Button\r\n              key={2}\r\n              onClick={() => this.handleCardAdd(2)}\r\n              >\r\n                Array.filter( )\r\n              </Button>\r\n              <Button\r\n                key={3}\r\n                onClick={() => this.handleCardAdd(3)}\r\n              >\r\n                Array.forEach( )\r\n              </Button>\r\n\r\n            </div>\r\n        </Form>\r\n        <Container\r\n          numArr={this.numArr}\r\n          className=\"ctr--cards\"\r\n          renderCard={this.renderCard}\r\n          renderState={this.state.toRender}\r\n        />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// need to make an array using this otherwise the current array won't have access to the stuff\r\n\r\nfunction showMapReact(key,arr, callback) {\r\n  console.log('hi');\r\n  var T, A, k;\r\n\r\n  if (this === null) {\r\n    throw new TypeError('this is null or not defined');\r\n  }\r\n  if (!this.state) {\r\n    throw new TypeError('this is not a React component');\r\n  }\r\n  var O = Object(arr);\r\n  var len = O.length >>> 0;\r\n\r\n\r\n  if (typeof callback !== 'function') {\r\n    throw new TypeError(callback + ' is not a function');\r\n  }\r\n\r\n  if (arguments.length > 1) {\r\n    T = arguments[1];\r\n  }\r\n\r\n  A = new Array(len);\r\n\r\n  k = 0;\r\n\r\n  while (k < len) {\r\n\r\n    var kValue, mappedValue;\r\n\r\n\r\n    if (k in O) {\r\n      kValue = O[k];\r\n\r\n      mappedValue = callback.call(T, kValue, k, O);\r\n      A[k] = mappedValue;\r\n    }\r\n    // d. Increase k by 1.\r\n    k++;\r\n    this.setState({key:[...A]});\r\n  }\r\n\r\n  return A;\r\n}\r\n\r\nfunction showForEach(key,arr, callback) { console.log('hi'); }\r\n\r\nexport { showMapReact , showForEach, };","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as arrMethods from './showArray';\r\n\r\nReactDOM.render(<App arrMethods={arrMethods}/>, document.getElementById('root'));\r\n"],"sourceRoot":""}